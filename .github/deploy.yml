name: Deploy do Portfólio no GitHub Pages

# Gatilho: Rodar esta action sempre que houver um push na branch 'main'
on:
  push:
    branches:
      - main  # Mude para 'master' se for o caso do seu repo

# Permissões necessárias para a action poder publicar no Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Job de build: constrói o site
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do repositório
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configura o pnpm (o template usa pnpm, como visto no lockfile)
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      # 3. Configura o Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Recomendado usar uma versão LTS (18 ou 20)
          cache: 'pnpm'

      # 4. Instala as dependências
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      # 5. Gera o site estático (SSG)
      # O comando 'pnpm run generate' roda 'nuxi generate'
      - name: Build Static Site
        run: pnpm run generate

      # 6. Configura o GitHub Pages para a action
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      # 7. Faz o upload dos arquivos gerados (que o Nuxt coloca em .output/public)
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .output/public # Pasta de saída do Nuxt SSG

  # Job de deploy: publica o site
  deploy:
    # Só roda depois que o job 'build' terminar com sucesso
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Mostra a URL no log
    steps:
      # 1. Publica o artefato (que foi salvo no 'upload-artifact')
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4